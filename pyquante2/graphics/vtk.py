import numpy as np

vtk_template = """\
# vtk DataFile Version 2.0
VTK file autogenerated for nemo3d via nemo_evec_to_vtk script
ASCII
DATASET STRUCTURED_POINTS
DIMENSIONS %(nx)d %(ny)d %(nz)d
ORIGIN %(ox)f %(oy)f %(oz)f
SPACING %(sx)f %(sy)f %(sz)f
POINT_DATA %(npts)d
%(recordstrings)s
"""

record_template = """\
SCALARS %(name)s float 1
LOOKUP_TABLE default
%(datastring)s
"""

def make_recordstrings(records,names):
    lines = []
    for name,record in zip(names,records):
        datastring = "\n".join("%f" % fi for fi in record)
        lines.append(record_template % dict(name=name,datastring=datastring))
    return "\n".join(lines)
        
def write_vtk(records,names,nxyz,oxyz,sxyz,fname = "nemo.vtk"):
    spacing = 0.543095
    sx = sy = sz = spacing
    ox = oy = oz = 0
    x = data[:,0]
    y = data[:,1]
    z = data[:,2]
    f = data[:,3]
    npts = len(f)
    nx = nunique(x)
    ny = nunique(y)
    nz = nunique(z)
    assert npts == nx*ny*nz
    recordstrings = make_recordstrings(records,names)
    open(fname,"w").write(vtk_template % locals())
    return    
    
